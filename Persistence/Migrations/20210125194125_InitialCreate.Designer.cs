// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210125194125_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Domain.Izgubljeno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ImaCip")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImeKontakta")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImeZivotinje")
                        .HasColumnType("TEXT");

                    b.Property<string>("LokacijaGdeJeIzgubljen")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rasa")
                        .HasColumnType("TEXT");

                    b.Property<string>("Starost")
                        .HasColumnType("TEXT");

                    b.Property<string>("TekstOglasa")
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefonKontakta")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vrsta")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("IzgubljeneZivotinje");
                });

            modelBuilder.Entity("Domain.Nadjeno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ImaCip")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImeKontakta")
                        .HasColumnType("TEXT");

                    b.Property<string>("JelSklonjen")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ProverenCip")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rasa")
                        .HasColumnType("TEXT");

                    b.Property<string>("TekstOglasa")
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefonKontakta")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vrsta")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("NadjeneZivotinje");
                });

            modelBuilder.Entity("Domain.Slika", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Put")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SlikeZivotinja");
                });

            modelBuilder.Entity("Domain.SlikeIzgubljen", b =>
                {
                    b.Property<Guid>("SlikaId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OglasId")
                        .HasColumnType("TEXT");

                    b.HasKey("SlikaId", "OglasId");

                    b.HasIndex("OglasId");

                    b.ToTable("SlikeIzgubljen");
                });

            modelBuilder.Entity("Domain.SlikeNadjen", b =>
                {
                    b.Property<Guid>("SlikaId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OglasId")
                        .HasColumnType("TEXT");

                    b.HasKey("SlikaId", "OglasId");

                    b.HasIndex("OglasId");

                    b.ToTable("SlikeNadjen");
                });

            modelBuilder.Entity("Domain.SlikeUdomljen", b =>
                {
                    b.Property<Guid>("SlikaId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OglasId")
                        .HasColumnType("TEXT");

                    b.HasKey("SlikaId", "OglasId");

                    b.HasIndex("OglasId");

                    b.ToTable("SlikeUdomljen");
                });

            modelBuilder.Entity("Domain.Udomljavanje", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("GdeSeZahtevaDaZivi")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ImaCip")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImeKontakta")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImeZivotinje")
                        .HasColumnType("TEXT");

                    b.Property<bool>("JelImaPapire")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("JelVakcinisan")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ObavezanUgovor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rasa")
                        .HasColumnType("TEXT");

                    b.Property<string>("Starost")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Sterilisan")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TekstOglasa")
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefonKontakta")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vrsta")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UdomljeneZivotinje");
                });

            modelBuilder.Entity("Domain.SlikeIzgubljen", b =>
                {
                    b.HasOne("Domain.Izgubljeno", "IzgubljenObj")
                        .WithMany("SlikeIzgubljen")
                        .HasForeignKey("OglasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Slika", "SlikaObj")
                        .WithMany("SlikeIzgubljen")
                        .HasForeignKey("SlikaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IzgubljenObj");

                    b.Navigation("SlikaObj");
                });

            modelBuilder.Entity("Domain.SlikeNadjen", b =>
                {
                    b.HasOne("Domain.Nadjeno", "NadjenObj")
                        .WithMany("SlikeNadjen")
                        .HasForeignKey("OglasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Slika", "SlikaObj")
                        .WithMany("SlikeNadjen")
                        .HasForeignKey("SlikaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NadjenObj");

                    b.Navigation("SlikaObj");
                });

            modelBuilder.Entity("Domain.SlikeUdomljen", b =>
                {
                    b.HasOne("Domain.Udomljavanje", "UdomljenObj")
                        .WithMany("SlikeUdomljen")
                        .HasForeignKey("OglasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Slika", "SlikaObj")
                        .WithMany("SlikeUdomljen")
                        .HasForeignKey("SlikaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SlikaObj");

                    b.Navigation("UdomljenObj");
                });

            modelBuilder.Entity("Domain.Izgubljeno", b =>
                {
                    b.Navigation("SlikeIzgubljen");
                });

            modelBuilder.Entity("Domain.Nadjeno", b =>
                {
                    b.Navigation("SlikeNadjen");
                });

            modelBuilder.Entity("Domain.Slika", b =>
                {
                    b.Navigation("SlikeIzgubljen");

                    b.Navigation("SlikeNadjen");

                    b.Navigation("SlikeUdomljen");
                });

            modelBuilder.Entity("Domain.Udomljavanje", b =>
                {
                    b.Navigation("SlikeUdomljen");
                });
#pragma warning restore 612, 618
        }
    }
}
